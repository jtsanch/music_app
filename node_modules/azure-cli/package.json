{
  "name": "azure-cli",
  "author": {
    "name": "Microsoft Corporation"
  },
  "contributors": [
    {
      "name": "Block, Glenn",
      "email": "gblock@microsoft.com"
    },
    {
      "name": "Cowlishaw, Mark",
      "email": "markcowl@microsoft.com"
    },
    {
      "name": "Dejardin, Louis",
      "email": "loudej@microsoft.com"
    },
    {
      "name": "Georgiev, Yavor",
      "email": "yavorg@microsoft.com"
    },
    {
      "name": "Janczuk, Tomasz",
      "email": "tjanczuk@microsoft.com"
    },
    {
      "name": "Rodrigues, Andre",
      "email": "andrerod@microsoft.com"
    },
    {
      "name": "Tavares, Chris",
      "email": "ctavares@microsoft.com"
    }
  ],
  "version": "0.8.3",
  "description": "Windows Azure Cross Platform Command Line tool",
  "tags": [
    "azure",
    "cli"
  ],
  "keywords": [
    "node",
    "azure",
    "cli",
    "cloud hosting",
    "deployment"
  ],
  "main": "./lib/cli.js",
  "preferGlobal": "true",
  "engines": {
    "node": ">= 0.6.15"
  },
  "licenses": [
    {
      "type": "Apache",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "dependencies": {
    "azure-common": "0.9.5",
    "azure": "0.9.7",
    "azure-gallery": "2.0.0-pre.4",
    "azure-mgmt-resource": "2.0.0-pre.4",
    "xml2js": "0.1.x",
    "xmlbuilder": "0.4.x",
    "underscore": "1.4.x",
    "node-uuid": "1.2.0",
    "tunnel": "0.0.2",
    "async": "0.2.7",
    "streamline": "0.4.5",
    "commander": "1.0.4",
    "winston": "0.6.x",
    "colors": "0.x.x",
    "eyes": "0.x.x",
    "easy-table": "0.0.1",
    "github": "0.1.6",
    "omelette": "0.1.0",
    "kuduscript": "0.1.10",
    "validator": "~3.1.0",
    "request": "2.27.0",
    "adal-node": "~0.1.5",
    "through": "2.3.4",
    "wordwrap": "0.0.2"
  },
  "devDependencies": {
    "mocha": "1.16.0",
    "jshint": ">= 2.1.4",
    "sinon": "*",
    "should": "*",
    "nock": "0.16",
    "winston-memory": "*",
    "event-stream": "~3.1.0",
    "cucumber": "~0.3.0"
  },
  "homepage": "https://github.com/WindowsAzure/azure-sdk-tools-xplat",
  "repository": {
    "type": "git",
    "url": "git@github.com:WindowsAzure/azure-sdk-tools-xplat.git"
  },
  "bugs": {
    "url": "https://github.com/WindowsAzure/azure-sdk-tools-xplat/issues"
  },
  "scripts": {
    "test": "npm -s run-script jshint && npm -s run-script unit",
    "unit": "node scripts/unit.js testlist.txt",
    "unit-mc": "node scripts/unit.js --mc testlistmc.txt",
    "unit-arm": "node scripts/unit.js testlistarm.txt",
    "jshint": "jshint lib --jslint-reporter --extra-ext ._js",
    "preci": "jshint lib --reporter=checkstyle --extra-ext ._js > checkstyle-result.xml",
    "ci": "node scripts/unit.js testlist.txt -xunit",
    "preacceptance": "node scripts/cuke-environment.js setup",
    "acceptance": "node node_modules/cucumber/bin/cucumber.js",
    "postacceptance": "node scripts/cuke-environment.js teardown",
    "extract-labels": "node scripts/extract-labels"
  },
  "bin": {
    "azure": "./bin/azure"
  },
  "readme": "# Windows Azure Xplat-CLI for Windows, Mac and Linux\n\n[![NPM version](https://badge.fury.io/js/azure-cli.png)](http://badge.fury.io/js/azure-cli) [![Build Status](https://travis-ci.org/Azure/azure-sdk-tools-xplat.png?branch=master)](https://travis-ci.org/WindowsAzure/azure-sdk-tools-xplat)\n\nThis project provides a cross-platform command line interface for developers and IT administrators to develop, deploy and manage Windows Azure applications.\n\n## Features\n\n* Accounts\n    * Azure Active Directory authentication for Organizational ID\n    * Download and import Azure publish settings\n    * List imported Azure subscriptions\n    * Select current subscription\n    * Manage Azure environments\n    * Create and manage affinity groups\n    * Export management certificate\n* Storage\n    * Create and manage Storage Accounts\n    * Create and manage container, blob and ACL\n* Websites\n    * Create and manage Windows Azure websites\n    * Download site log files and get real time log streaming\n    * Manage Deployments\n    * Configure GitHub integration\n    * Create, manage and swap slots\n    * Create and manage WebJobs\n* Virtual machines\n    * Create and manage Windows and Linux Virtual machines\n    * Create and manage VM endpoints\n    * Create and manage Virtual Machine Images\n    * Create and manage certificates\n    * CloudInit for Ubuntu VM\n* Network\n    * Import and export network configuration\n    * Create and manage virtual network\n    * Create and manage DNS server\n* Mobile Services\n    * Create and manage Mobile Services\n    * Manage tables, scripts, and configuration\n    * Access logs\n    * Access data\n* Service Bus\n    * Create and manage Service Bus namespaces\n* SQL Database\n    * Create and manage SQL Servers, Firewall rules and Databases\n* Resource Manager\n    * Manage resource groups and deployments\n    * Query and download gallery templates\n    * Manage individual resources\n\n## Installation\n\n### Install from npm\n\nYou can install the azure-cli npm package directly.\n```bash\nnpm install -g azure-cli\n```\n\n### Pre-compiled installers\n\n* Windows\n* Mac\n* Linux\n\n### Download Source Code\n\nTo get the source code of the SDK via **git** just type:\n\n```bash\ngit clone https://github.com/WindowsAzure/azure-sdk-tools-xplat.git\ncd ./azure-sdk-tools-xplat\nnpm install\n```\n\n### Configure auto-complete\n\nAuto-complete is supported for Mac and Linux.\n\nTo enable it in zsh, run:\n\n```bash\necho '. <(azure --completion)' >> .zshrc\n```\n\nTo enable it in bash, run:\n\n```bash\nazure --completion >> ~/azure.completion.sh\necho 'source ~/azure.completion.sh' >> .bash_profile\n```\n\n## Get Started\n\nIn general, following are the steps:\n\n* Get yourself authenticated with Windows Azure. For details, please check out [this article](http://www.windowsazure.com/en-us/documentation/articles/xplat-cli/).\n  * Option 1: Login with your Organizational account. Azure Active Directory authentication is used in this case. No management certificate is needed. **Note**: Microsoft account is not supported in this approach right now. You can create an Organizational account from the Azure portal for free.\n  * Option 2: Download and import a publish settings file which contains a management certificate.\n* Use the commands\n\nThe first step can be different for different environment you are targeting. Following are detail instructions for each supported environment.\n\n### Windows Azure\n\nIf you use both mechanisms on the same subscription, Azure Active Directory authentication always wins. If you want to go back to management certificate authentication, please use ``azure logout``, which will remove the Azure Active Directory information and bring management certificate authentication back in.\n\n#### Login directly from xplat-cli (Azure Active Directory authentication)\n\n```bash\n# This will prompt for your password in the console\nazure login -u <your organizational ID email address>\n\n# use the commands to manage your services/applications\nazure site create --location \"West US\" mywebsite\n```\n\n#### Use publish settings file (Management certificate authentication)\n\n```bash\n# Download a file which contains the publish settings information of your subscription.\n# This will open a browser window and ask you to log in to get the file.\nazure account download\n\n# Import the file you just downloaded.\n# Notice that the file contains credential of your subscription so you don't want to make it public\n# (like check in to source control, etc.).\nazure account import <file location>\n\n# Use the commands to manage your services/applications\nazure site create --location \"West US\" mywebsite\n```\n\n## 2 Modes\n\nStarting from 0.8.0, we are adding a separate mode for Resource Manager. You can use the following command to switch between the\n\n* Service management: commands using the Azure service management API\n* Resource manager: commands using the Azure Resource Manager API\n\nThey are not designed to work together.\n\n```bash\nazure config mode asm # service management\nazure config mode arm # resource manager\n```\n\n**For more details on the commands, please see the [command line tool reference](http://go.microsoft.com/fwlink/?LinkId=252246&clcid=0x409) and this [How to Guide](http://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/command-line-tools/)**\n\n## Running tests\n\nThe tests included in the repository execute CLI commands against live Widows Azure management endpoints. In order to run the tests, you must have a Windows Azure subscription as well as a GitHub account.\n\nBefore running tests, you must take a one-time action to configure the CLI with the Windows Azure subscription by running\n\n```bash\nazure account download\nazure account import\n```\n\nNext, provide the following parameters by setting environment variables:\n\n- `AZURE_STORAGE_ACCOUNT` - your Windows Azure Storage Account name\n- `AZURE_STORAGE_ACCESS_KEY` - secret access key to that Storage Account\n- `AZURE_SERVICEBUS_NAMESPACE` - your Windows Azure Service Bus Namespace\n- `AZURE_SERVICEBUS_ACCESS_KEY` - secret access to that Service Bus namespace\n- `AZURE_GITHUB_USERNAME` - GitHub account username\n- `AZURE_GITHUB_PASSWORD` - GitHub account password\n- `AZURE_GITHUB_REPOSITORY` - name an empty GitHub repository to use during tests (e.g. `tjanczuk/clitest`)\n- `SSHCERT` - path of SSH Certificate (eg. `path\\cert.pem`)\n- `BLOB_SOURCE_PATH` - source url path for disk upload (`container\\subcontainer\\disk.vhd`)\n\n\nTo run the tests, call\n\n```bash\nnpm test\n```\n\nfrom the root of your clone of the repository. Most tests execute against live Windows Azure management APIs, and running them takes considerable time.\n\nNote: by default, the tests targeting the Windows Azure Mobile Services run against a mocked Windows Azure HTTP endpoints. In order to execute these tests against live Windows Azure management APIs instead, set the `NOCK_OFF=true` environment variable before running the tests.\n\n## Learn More\nFor documentation on how to host Node.js applications on Windows Azure, please see the [Windows Azure Node.js Developer Center](http://www.windowsazure.com/en-us/develop/nodejs/).\n\nFor more extensive  documentation on the new cross platform CLI tool for Mac and Linux, please see this [reference](http://go.microsoft.com/fwlink/?LinkId=252246&clcid=0x409) and this [How to Guide](http://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/command-line-tools/)\n",
  "readmeFilename": "README.md",
  "_id": "azure-cli@0.8.3",
  "_from": "azure-cli@"
}
